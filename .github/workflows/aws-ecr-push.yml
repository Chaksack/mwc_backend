name: Build and Push to AWS ECR

# This workflow builds a Docker image of the application and pushes it to AWS ECR
# It runs on pushes to the main branch or can be triggered manually
# It also sends Slack notifications about the deployment status

on:
  push:
    branches: [ main ]
  # Allow manual trigger from GitHub Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  # Default environment variables - can be overridden in workflow_dispatch
  AWS_REGION: us-east-1  # Change to your AWS region
  ECR_REPOSITORY: mwc-backend  # Change to your ECR repository name
  IMAGE_TAG: ${{ github.sha }}
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    # Set environment based on trigger
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker Buildx for faster builds with caching
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Cache Docker layers to speed up builds
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # Set environment-specific tag
        ENV_TAG=${{ env.ENVIRONMENT }}

        echo "Building Docker image for $ENV_TAG environment..."

        # Build the Docker image with caching
        docker buildx build \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache-new \
          --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          --tag $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          --tag $ECR_REGISTRY/$ECR_REPOSITORY:$ENV_TAG \
          --push \
          --file Dockerfile \
          .

        # Push the Docker image to ECR with multiple tags
        echo "Pushing image to ECR with tags: $IMAGE_TAG, latest, and $ENV_TAG"

        # Output the image URI for use in subsequent steps or jobs
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    # Move cache to prevent cache growth
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Deployment Summary
      run: |
        echo "✅ Deployment Summary"
        echo "Environment: ${{ env.ENVIRONMENT }}"
        echo "Image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
        echo "Commit: ${{ github.sha }}"
        echo "Pushed by: ${{ github.actor }}"

    # Send Slack notification for successful deployment
    - name: Send Slack notification - Success
      if: success()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: deployments
        SLACK_COLOR: good
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: |
          ✅ Successfully deployed to ${{ env.ENVIRONMENT }} environment
          *Image:* ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          *Commit:* ${{ github.sha }}
          *Pushed by:* ${{ github.actor }}
        SLACK_TITLE: Deployment Success
        SLACK_USERNAME: GitHub Actions

    # Send Slack notification for failed deployment
    - name: Send Slack notification - Failure
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: deployments
        SLACK_COLOR: danger
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: |
          ❌ Failed to deploy to ${{ env.ENVIRONMENT }} environment
          *Repository:* ${{ github.repository }}
          *Commit:* ${{ github.sha }}
          *Workflow:* ${{ github.workflow }}
          *Pushed by:* ${{ github.actor }}
          *Check the [GitHub Actions logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details*
        SLACK_TITLE: Deployment Failure
        SLACK_USERNAME: GitHub Actions
